## TODO

* String encoding ?? (1.9 && Rubinius)
* Verify GC on all implementations / platforms
* Documentation - basic pass
                - arguments
                - examples
                - augment
                - github pages for docs
                - link to other content (socket options)
* GC for ZMQ::Frame - malloc errors
* GC for ZMQ::Message - malloc errors
* Ensure test cases for all ruby code in /lib as well (Loop, Handler, )
* Cross compile for Windows
* Assert gem builds and installs as expected against all implementations with the vendor'ed dependences in /ext
* Frame recycle: - message_popstr
                 - message_destroy
* ZMQ::Message#save && ZMQ::Message.load
* ZMQ::Socket#handler = x. Assert handler interface here instead ???
* Callback handler for ZMQ::Socket useful beyond just ZMQ::Loop ?
* Handler#post_init callback ?
* Optimize zloop handler callbacks (perftools)
* OS X leaks utility - http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/leaks.1.html
* zeromq git ref: https://github.com/zeromq/zeromq2-1/commit/35df57cda6861cac31710ad2a10fae4c97c0e63c
* czmq git ref: https://github.com/zeromq/czmq/commit/18c8b8daf3013632f2a444a0127f4fa80dbd866e
* Distribute vendor'ed libs (czmq && zeromq) in tar.gz format instead
* Handle GC issue with timers in loop callbacks
* Let sockets registered with a ZMQ::Loop instance be verbose if the reactor is set to verbose mode
* Sync up libzmq && czmq ( vendor tarballs direct )
* Revisit threading integration on 1.8
* Socket GC - only attempt to close if socket is not in a pending state
* Assert per socket type behavior in socket specific test cases
* Revisit errno specific assertions handled in Ruby land - false positives in perf tests (./perf/push_pull/local.rb:10:in `recv': Invalid argument - Invalid argument (Errno::EINVAL))
* Handle GC error exposed by perf/req_rep.rb (ruby(47948,0x10e1c5000) malloc: *** error for object 0x7fd68c800200: pointer being freed was not allocated)
* Revisit uneven distribution with PUSH/PULL && PUB/SUB sock pairs on 1.8 (references ZMQ_FD && ZMQ_EVENTS + edge triggered events)